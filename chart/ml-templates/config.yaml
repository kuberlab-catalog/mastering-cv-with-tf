kind: MLApp
metadata:
  name: mastering-cv-with-tf
spec:
  package_manager: "pip{{.python_version.value}}"
  default_mount_path: "/notebooks"
  packages:
    - names:
      {{- range $i, $value := .packages }}
      - "{{ $value }}"
      {{- end }}
      manager: "pip{{.python_version.value}}"
  tasks:
  - name: standalone
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: python hello-tensorflow.py
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 8Gi
      default_volume_mapping: true
  - name: parallel
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"WORKER: $REPLICA_INDEX\";echo \"PSS: $PS_NODES\"; echo \"WORKERS: $WORKER_NODES\"; echo \"BUILD: $BUILD_ID\"; python hello-tensorflow.py"
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 4Gi
      port: 2222
      default_volume_mapping: true
    - name: ps
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      is_permanent: true
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
        cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
      {{- end }}
      command: "echo \"PS: $REPLICA_INDEX\";echo \"PSS: $PS_NODES\"; echo \"WORKERS: $WORKER_NODES\"; echo \"BUILD: $BUILD_ID\"; sleep 300"
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 2Gi
      port: 2222
      default_volume_mapping: true
  uix:
  {{- if .jupyter.value }}
  - name: jupyter
    displayName: Jupyter
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    resources:
      accelerators:
      {{- if .useGPU.value }}
        gpu: 1
      {{- else }}
        gpu: 0
      {{- end }}
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
  {{- end }}
  {{- if .tensorboard.value }}
  - name: tensorboard
    displayName: Tensorboard
    {{- if eq (index .tensorflow_version.value 0) 50 }}
    command: "tensorboard --logdir=$TRAINING_DIR --bind_all"
    {{- else }}
    command: "tensorboard --logdir=$TRAINING_DIR"
    {{- end }}
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-36-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-36-{{.tensorflow_version.value}}-full"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/tensorflow:gpu-27-{{.tensorflow_version.value}}-full"
      cpu: "kuberlab/tensorflow:cpu-27-{{.tensorflow_version.value}}-full"
    {{- end }}
    ports:
    - port: 6006
      targetPort: 6006
      protocol: TCP
      name: http
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    volumes:
    - name: training
  {{- end }}
  volumes:
  - isLibDir: false
    name: training
    clusterStorage: {{ .storage.value }}
  - gitRepo:
      repository: {{ gitRepo .chapters.value }}
      accountId: '{{ .chapters.accountId }}'
      revision: '{{ .chapters.revision }}'
    isLibDir: false
    name: chapters
    subPath: {{ gitSubPath .chapters.value }}
  - isLibDir: true
    name: lib
    clusterStorage: {{ .storage.value }}
  - isLibDir: false
    name: data
  - isLibDir: false
    mountPath: /notebooks
    name: code
    subPath: code
    clusterStorage: {{ .storage.value }}